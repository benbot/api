# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from spacemesh.v1 import smesher_types_pb2 as spacemesh_dot_v1_dot_smesher__types__pb2


class SmesherServiceStub(object):
    """Readonly basic node data
    ///// Smeshing (mining) management
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.IsSmeshing = channel.unary_unary(
                '/spacemesh.v1.SmesherService/IsSmeshing',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=spacemesh_dot_v1_dot_smesher__types__pb2.IsSmeshingResponse.FromString,
                )
        self.StartSmeshing = channel.unary_unary(
                '/spacemesh.v1.SmesherService/StartSmeshing',
                request_serializer=spacemesh_dot_v1_dot_smesher__types__pb2.StartSmeshingRequest.SerializeToString,
                response_deserializer=spacemesh_dot_v1_dot_smesher__types__pb2.StartSmeshingResponse.FromString,
                )
        self.StopSmeshing = channel.unary_unary(
                '/spacemesh.v1.SmesherService/StopSmeshing',
                request_serializer=spacemesh_dot_v1_dot_smesher__types__pb2.StopSmeshingRequest.SerializeToString,
                response_deserializer=spacemesh_dot_v1_dot_smesher__types__pb2.StopSmeshingResponse.FromString,
                )
        self.SmesherID = channel.unary_unary(
                '/spacemesh.v1.SmesherService/SmesherID',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=spacemesh_dot_v1_dot_smesher__types__pb2.SmesherIDResponse.FromString,
                )
        self.Coinbase = channel.unary_unary(
                '/spacemesh.v1.SmesherService/Coinbase',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=spacemesh_dot_v1_dot_smesher__types__pb2.CoinbaseResponse.FromString,
                )
        self.SetCoinbase = channel.unary_unary(
                '/spacemesh.v1.SmesherService/SetCoinbase',
                request_serializer=spacemesh_dot_v1_dot_smesher__types__pb2.SetCoinbaseRequest.SerializeToString,
                response_deserializer=spacemesh_dot_v1_dot_smesher__types__pb2.SetCoinbaseResponse.FromString,
                )
        self.MinGas = channel.unary_unary(
                '/spacemesh.v1.SmesherService/MinGas',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=spacemesh_dot_v1_dot_smesher__types__pb2.MinGasResponse.FromString,
                )
        self.SetMinGas = channel.unary_unary(
                '/spacemesh.v1.SmesherService/SetMinGas',
                request_serializer=spacemesh_dot_v1_dot_smesher__types__pb2.SetMinGasRequest.SerializeToString,
                response_deserializer=spacemesh_dot_v1_dot_smesher__types__pb2.SetMinGasResponse.FromString,
                )
        self.PostStatus = channel.unary_unary(
                '/spacemesh.v1.SmesherService/PostStatus',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=spacemesh_dot_v1_dot_smesher__types__pb2.PostStatusResponse.FromString,
                )
        self.PostComputeProviders = channel.unary_unary(
                '/spacemesh.v1.SmesherService/PostComputeProviders',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=spacemesh_dot_v1_dot_smesher__types__pb2.PostComputeProvidersResponse.FromString,
                )
        self.CreatePostData = channel.unary_unary(
                '/spacemesh.v1.SmesherService/CreatePostData',
                request_serializer=spacemesh_dot_v1_dot_smesher__types__pb2.CreatePostDataRequest.SerializeToString,
                response_deserializer=spacemesh_dot_v1_dot_smesher__types__pb2.CreatePostDataResponse.FromString,
                )
        self.StopPostDataCreationSession = channel.unary_unary(
                '/spacemesh.v1.SmesherService/StopPostDataCreationSession',
                request_serializer=spacemesh_dot_v1_dot_smesher__types__pb2.StopPostDataCreationSessionRequest.SerializeToString,
                response_deserializer=spacemesh_dot_v1_dot_smesher__types__pb2.StopPostDataCreationSessionResponse.FromString,
                )
        self.PostDataCreationProgressStream = channel.unary_stream(
                '/spacemesh.v1.SmesherService/PostDataCreationProgressStream',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=spacemesh_dot_v1_dot_smesher__types__pb2.PostDataCreationProgressStreamResponse.FromString,
                )


class SmesherServiceServicer(object):
    """Readonly basic node data
    ///// Smeshing (mining) management
    """

    def IsSmeshing(self, request, context):
        """Returns true iff node is currently smeshing
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartSmeshing(self, request, context):
        """Start smeshing
        Returns error if post data is incomplete or missing
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopSmeshing(self, request, context):
        """Stop smeshing and optionally attempt to delete post init file(s)
        Returns success if request is accepted by node, error if it fails
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SmesherID(self, request, context):
        """Get the current smesher id generated by the node
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Coinbase(self, request, context):
        """Get the current coinbase
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetCoinbase(self, request, context):
        """Set the coinbase
        Returns success if request succeeds, failure if it fails
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MinGas(self, request, context):
        """Get the current min gas for including txs in blocks by this smesher
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetMinGas(self, request, context):
        """Set a min gas units for including txs in blocks by this smesher
        Returns success if request succeeds, failure if it fails
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PostStatus(self, request, context):
        """///// Proofs of space data files management

        Returns post data status from the node
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PostComputeProviders(self, request, context):
        """Returns a list of available post compute providers for creating post data
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreatePostData(self, request, context):
        """Starts (or continues) a post init phase. Supports resuming a previously
        started init session, as well as changing post params (e.g., post data size)
        after initial setup.
        Returns success if request is accepted by node, failure if it fails
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopPostDataCreationSession(self, request, context):
        """Stop an ongoing post data init phase and optionally attempt to delete
        the post data file(s)
        Returns success if request is accepted by node, failure if it fails
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PostDataCreationProgressStream(self, request, context):
        """Returns a stream of updates to post data file(s) during the init phase
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SmesherServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'IsSmeshing': grpc.unary_unary_rpc_method_handler(
                    servicer.IsSmeshing,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=spacemesh_dot_v1_dot_smesher__types__pb2.IsSmeshingResponse.SerializeToString,
            ),
            'StartSmeshing': grpc.unary_unary_rpc_method_handler(
                    servicer.StartSmeshing,
                    request_deserializer=spacemesh_dot_v1_dot_smesher__types__pb2.StartSmeshingRequest.FromString,
                    response_serializer=spacemesh_dot_v1_dot_smesher__types__pb2.StartSmeshingResponse.SerializeToString,
            ),
            'StopSmeshing': grpc.unary_unary_rpc_method_handler(
                    servicer.StopSmeshing,
                    request_deserializer=spacemesh_dot_v1_dot_smesher__types__pb2.StopSmeshingRequest.FromString,
                    response_serializer=spacemesh_dot_v1_dot_smesher__types__pb2.StopSmeshingResponse.SerializeToString,
            ),
            'SmesherID': grpc.unary_unary_rpc_method_handler(
                    servicer.SmesherID,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=spacemesh_dot_v1_dot_smesher__types__pb2.SmesherIDResponse.SerializeToString,
            ),
            'Coinbase': grpc.unary_unary_rpc_method_handler(
                    servicer.Coinbase,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=spacemesh_dot_v1_dot_smesher__types__pb2.CoinbaseResponse.SerializeToString,
            ),
            'SetCoinbase': grpc.unary_unary_rpc_method_handler(
                    servicer.SetCoinbase,
                    request_deserializer=spacemesh_dot_v1_dot_smesher__types__pb2.SetCoinbaseRequest.FromString,
                    response_serializer=spacemesh_dot_v1_dot_smesher__types__pb2.SetCoinbaseResponse.SerializeToString,
            ),
            'MinGas': grpc.unary_unary_rpc_method_handler(
                    servicer.MinGas,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=spacemesh_dot_v1_dot_smesher__types__pb2.MinGasResponse.SerializeToString,
            ),
            'SetMinGas': grpc.unary_unary_rpc_method_handler(
                    servicer.SetMinGas,
                    request_deserializer=spacemesh_dot_v1_dot_smesher__types__pb2.SetMinGasRequest.FromString,
                    response_serializer=spacemesh_dot_v1_dot_smesher__types__pb2.SetMinGasResponse.SerializeToString,
            ),
            'PostStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.PostStatus,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=spacemesh_dot_v1_dot_smesher__types__pb2.PostStatusResponse.SerializeToString,
            ),
            'PostComputeProviders': grpc.unary_unary_rpc_method_handler(
                    servicer.PostComputeProviders,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=spacemesh_dot_v1_dot_smesher__types__pb2.PostComputeProvidersResponse.SerializeToString,
            ),
            'CreatePostData': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePostData,
                    request_deserializer=spacemesh_dot_v1_dot_smesher__types__pb2.CreatePostDataRequest.FromString,
                    response_serializer=spacemesh_dot_v1_dot_smesher__types__pb2.CreatePostDataResponse.SerializeToString,
            ),
            'StopPostDataCreationSession': grpc.unary_unary_rpc_method_handler(
                    servicer.StopPostDataCreationSession,
                    request_deserializer=spacemesh_dot_v1_dot_smesher__types__pb2.StopPostDataCreationSessionRequest.FromString,
                    response_serializer=spacemesh_dot_v1_dot_smesher__types__pb2.StopPostDataCreationSessionResponse.SerializeToString,
            ),
            'PostDataCreationProgressStream': grpc.unary_stream_rpc_method_handler(
                    servicer.PostDataCreationProgressStream,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=spacemesh_dot_v1_dot_smesher__types__pb2.PostDataCreationProgressStreamResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'spacemesh.v1.SmesherService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SmesherService(object):
    """Readonly basic node data
    ///// Smeshing (mining) management
    """

    @staticmethod
    def IsSmeshing(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spacemesh.v1.SmesherService/IsSmeshing',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            spacemesh_dot_v1_dot_smesher__types__pb2.IsSmeshingResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StartSmeshing(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spacemesh.v1.SmesherService/StartSmeshing',
            spacemesh_dot_v1_dot_smesher__types__pb2.StartSmeshingRequest.SerializeToString,
            spacemesh_dot_v1_dot_smesher__types__pb2.StartSmeshingResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StopSmeshing(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spacemesh.v1.SmesherService/StopSmeshing',
            spacemesh_dot_v1_dot_smesher__types__pb2.StopSmeshingRequest.SerializeToString,
            spacemesh_dot_v1_dot_smesher__types__pb2.StopSmeshingResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SmesherID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spacemesh.v1.SmesherService/SmesherID',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            spacemesh_dot_v1_dot_smesher__types__pb2.SmesherIDResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Coinbase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spacemesh.v1.SmesherService/Coinbase',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            spacemesh_dot_v1_dot_smesher__types__pb2.CoinbaseResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetCoinbase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spacemesh.v1.SmesherService/SetCoinbase',
            spacemesh_dot_v1_dot_smesher__types__pb2.SetCoinbaseRequest.SerializeToString,
            spacemesh_dot_v1_dot_smesher__types__pb2.SetCoinbaseResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MinGas(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spacemesh.v1.SmesherService/MinGas',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            spacemesh_dot_v1_dot_smesher__types__pb2.MinGasResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetMinGas(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spacemesh.v1.SmesherService/SetMinGas',
            spacemesh_dot_v1_dot_smesher__types__pb2.SetMinGasRequest.SerializeToString,
            spacemesh_dot_v1_dot_smesher__types__pb2.SetMinGasResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PostStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spacemesh.v1.SmesherService/PostStatus',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            spacemesh_dot_v1_dot_smesher__types__pb2.PostStatusResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PostComputeProviders(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spacemesh.v1.SmesherService/PostComputeProviders',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            spacemesh_dot_v1_dot_smesher__types__pb2.PostComputeProvidersResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreatePostData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spacemesh.v1.SmesherService/CreatePostData',
            spacemesh_dot_v1_dot_smesher__types__pb2.CreatePostDataRequest.SerializeToString,
            spacemesh_dot_v1_dot_smesher__types__pb2.CreatePostDataResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StopPostDataCreationSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/spacemesh.v1.SmesherService/StopPostDataCreationSession',
            spacemesh_dot_v1_dot_smesher__types__pb2.StopPostDataCreationSessionRequest.SerializeToString,
            spacemesh_dot_v1_dot_smesher__types__pb2.StopPostDataCreationSessionResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PostDataCreationProgressStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/spacemesh.v1.SmesherService/PostDataCreationProgressStream',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            spacemesh_dot_v1_dot_smesher__types__pb2.PostDataCreationProgressStreamResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
