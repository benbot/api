// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.3
// source: spacemesh/v1/smesher_types.proto

package v1

import (
	proto "github.com/golang/protobuf/proto"
	status "google.golang.org/genproto/googleapis/rpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Compute API class
type ComputeApiClass int32

const (
	ComputeApiClass_COMPUTE_API_CLASS_UNSPECIFIED ComputeApiClass = 0
	ComputeApiClass_COMPUTE_API_CLASS_CPU         ComputeApiClass = 1 // useful for testing on systems without a cuda or vulkan GPU
	ComputeApiClass_COMPUTE_API_CLASS_CUDA        ComputeApiClass = 2
	ComputeApiClass_COMPUTE_API_CLASS_VULKAN      ComputeApiClass = 3
)

// Enum value maps for ComputeApiClass.
var (
	ComputeApiClass_name = map[int32]string{
		0: "COMPUTE_API_CLASS_UNSPECIFIED",
		1: "COMPUTE_API_CLASS_CPU",
		2: "COMPUTE_API_CLASS_CUDA",
		3: "COMPUTE_API_CLASS_VULKAN",
	}
	ComputeApiClass_value = map[string]int32{
		"COMPUTE_API_CLASS_UNSPECIFIED": 0,
		"COMPUTE_API_CLASS_CPU":         1,
		"COMPUTE_API_CLASS_CUDA":        2,
		"COMPUTE_API_CLASS_VULKAN":      3,
	}
)

func (x ComputeApiClass) Enum() *ComputeApiClass {
	p := new(ComputeApiClass)
	*p = x
	return p
}

func (x ComputeApiClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ComputeApiClass) Descriptor() protoreflect.EnumDescriptor {
	return file_spacemesh_v1_smesher_types_proto_enumTypes[0].Descriptor()
}

func (ComputeApiClass) Type() protoreflect.EnumType {
	return &file_spacemesh_v1_smesher_types_proto_enumTypes[0]
}

func (x ComputeApiClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ComputeApiClass.Descriptor instead.
func (ComputeApiClass) EnumDescriptor() ([]byte, []int) {
	return file_spacemesh_v1_smesher_types_proto_rawDescGZIP(), []int{0}
}

type SmeshingStatus_FilesStatus int32

const (
	SmeshingStatus_FILES_STATUS_UNSPECIFIED SmeshingStatus_FilesStatus = 0
	SmeshingStatus_FILES_STATUS_NOT_FOUND   SmeshingStatus_FilesStatus = 1 // Some or all of expected data files do not exist
	SmeshingStatus_FILES_STATUS_PARTIAL     SmeshingStatus_FilesStatus = 2 // Some files exist and setup can be continued (and is in progress)
	SmeshingStatus_FILES_STATUS_COMPLETE    SmeshingStatus_FilesStatus = 3 // Expected data files are available and verified
)

// Enum value maps for SmeshingStatus_FilesStatus.
var (
	SmeshingStatus_FilesStatus_name = map[int32]string{
		0: "FILES_STATUS_UNSPECIFIED",
		1: "FILES_STATUS_NOT_FOUND",
		2: "FILES_STATUS_PARTIAL",
		3: "FILES_STATUS_COMPLETE",
	}
	SmeshingStatus_FilesStatus_value = map[string]int32{
		"FILES_STATUS_UNSPECIFIED": 0,
		"FILES_STATUS_NOT_FOUND":   1,
		"FILES_STATUS_PARTIAL":     2,
		"FILES_STATUS_COMPLETE":    3,
	}
)

func (x SmeshingStatus_FilesStatus) Enum() *SmeshingStatus_FilesStatus {
	p := new(SmeshingStatus_FilesStatus)
	*p = x
	return p
}

func (x SmeshingStatus_FilesStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SmeshingStatus_FilesStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_spacemesh_v1_smesher_types_proto_enumTypes[1].Descriptor()
}

func (SmeshingStatus_FilesStatus) Type() protoreflect.EnumType {
	return &file_spacemesh_v1_smesher_types_proto_enumTypes[1]
}

func (x SmeshingStatus_FilesStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SmeshingStatus_FilesStatus.Descriptor instead.
func (SmeshingStatus_FilesStatus) EnumDescriptor() ([]byte, []int) {
	return file_spacemesh_v1_smesher_types_proto_rawDescGZIP(), []int{1, 0}
}

type SmeshingStatus_ErrorType int32

const (
	SmeshingStatus_ERROR_TYPE_UNSPECIFIED SmeshingStatus_ErrorType = 0
	SmeshingStatus_ERROR_TYPE_READ_ERROR  SmeshingStatus_ErrorType = 1 // Failure to read from a data file
	SmeshingStatus_ERROR_TYPE_WRITE_ERROR SmeshingStatus_ErrorType = 2 // Failure to write to a data file
)

// Enum value maps for SmeshingStatus_ErrorType.
var (
	SmeshingStatus_ErrorType_name = map[int32]string{
		0: "ERROR_TYPE_UNSPECIFIED",
		1: "ERROR_TYPE_READ_ERROR",
		2: "ERROR_TYPE_WRITE_ERROR",
	}
	SmeshingStatus_ErrorType_value = map[string]int32{
		"ERROR_TYPE_UNSPECIFIED": 0,
		"ERROR_TYPE_READ_ERROR":  1,
		"ERROR_TYPE_WRITE_ERROR": 2,
	}
)

func (x SmeshingStatus_ErrorType) Enum() *SmeshingStatus_ErrorType {
	p := new(SmeshingStatus_ErrorType)
	*p = x
	return p
}

func (x SmeshingStatus_ErrorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SmeshingStatus_ErrorType) Descriptor() protoreflect.EnumDescriptor {
	return file_spacemesh_v1_smesher_types_proto_enumTypes[2].Descriptor()
}

func (SmeshingStatus_ErrorType) Type() protoreflect.EnumType {
	return &file_spacemesh_v1_smesher_types_proto_enumTypes[2]
}

func (x SmeshingStatus_ErrorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SmeshingStatus_ErrorType.Descriptor instead.
func (SmeshingStatus_ErrorType) EnumDescriptor() ([]byte, []int) {
	return file_spacemesh_v1_smesher_types_proto_rawDescGZIP(), []int{1, 1}
}

// Basic user provided smeshing data
type SmeshingData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path       string     `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`                                // User provided volume path to create the proof of space data files at
	DataSize   uint64     `protobuf:"varint,2,opt,name=data_size,json=dataSize,proto3" json:"data_size,omitempty"`       // Requested post data size in units
	Throttle   bool       `protobuf:"varint,3,opt,name=throttle,proto3" json:"throttle,omitempty"`                       // Throttle down setup phase computations while user is interactive on system
	ProviderId uint32     `protobuf:"varint,4,opt,name=provider_id,json=providerId,proto3" json:"provider_id,omitempty"` // A PostProvider id to be used to create the proof of space data
	Coinbase   *AccountId `protobuf:"bytes,5,opt,name=coinbase,proto3" json:"coinbase,omitempty"`                        // User requested smeshing rewards account
}

func (x *SmeshingData) Reset() {
	*x = SmeshingData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_smesher_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmeshingData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmeshingData) ProtoMessage() {}

func (x *SmeshingData) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_smesher_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmeshingData.ProtoReflect.Descriptor instead.
func (*SmeshingData) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_smesher_types_proto_rawDescGZIP(), []int{0}
}

func (x *SmeshingData) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SmeshingData) GetDataSize() uint64 {
	if x != nil {
		return x.DataSize
	}
	return 0
}

func (x *SmeshingData) GetThrottle() bool {
	if x != nil {
		return x.Throttle
	}
	return false
}

func (x *SmeshingData) GetProviderId() uint32 {
	if x != nil {
		return x.ProviderId
	}
	return 0
}

func (x *SmeshingData) GetCoinbase() *AccountId {
	if x != nil {
		return x.Coinbase
	}
	return nil
}

// Smeshing status
type SmeshingStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSmeshing      bool                       `protobuf:"varint,1,opt,name=is_smeshing,json=isSmeshing,proto3" json:"is_smeshing,omitempty"` // true if post data was created and node is set to smesh
	FilesStatus     SmeshingStatus_FilesStatus `protobuf:"varint,2,opt,name=files_status,json=filesStatus,proto3,enum=spacemesh.v1.SmeshingStatus_FilesStatus" json:"files_status,omitempty"`
	SetupInProgress bool                       `protobuf:"varint,3,opt,name=setup_in_progress,json=setupInProgress,proto3" json:"setup_in_progress,omitempty"` // True if post setup process is currently in progress (writing data)
	BytesWritten    uint64                     `protobuf:"varint,4,opt,name=bytes_written,json=bytesWritten,proto3" json:"bytes_written,omitempty"`            // Bytes written to the data files (actual total files sizes)
	ErrorMessage    string                     `protobuf:"bytes,5,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`             // Last init process error message
	ErrorType       SmeshingStatus_ErrorType   `protobuf:"varint,6,opt,name=error_type,json=errorType,proto3,enum=spacemesh.v1.SmeshingStatus_ErrorType" json:"error_type,omitempty"`
	SmesherId       *AccountId                 `protobuf:"bytes,7,opt,name=smesher_id,json=smesherId,proto3" json:"smesher_id,omitempty"`
	CoinbaseAddress *AccountId                 `protobuf:"bytes,8,opt,name=coinbase_address,json=coinbaseAddress,proto3" json:"coinbase_address,omitempty"`
}

func (x *SmeshingStatus) Reset() {
	*x = SmeshingStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_smesher_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmeshingStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmeshingStatus) ProtoMessage() {}

func (x *SmeshingStatus) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_smesher_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmeshingStatus.ProtoReflect.Descriptor instead.
func (*SmeshingStatus) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_smesher_types_proto_rawDescGZIP(), []int{1}
}

func (x *SmeshingStatus) GetIsSmeshing() bool {
	if x != nil {
		return x.IsSmeshing
	}
	return false
}

func (x *SmeshingStatus) GetFilesStatus() SmeshingStatus_FilesStatus {
	if x != nil {
		return x.FilesStatus
	}
	return SmeshingStatus_FILES_STATUS_UNSPECIFIED
}

func (x *SmeshingStatus) GetSetupInProgress() bool {
	if x != nil {
		return x.SetupInProgress
	}
	return false
}

func (x *SmeshingStatus) GetBytesWritten() uint64 {
	if x != nil {
		return x.BytesWritten
	}
	return 0
}

func (x *SmeshingStatus) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *SmeshingStatus) GetErrorType() SmeshingStatus_ErrorType {
	if x != nil {
		return x.ErrorType
	}
	return SmeshingStatus_ERROR_TYPE_UNSPECIFIED
}

func (x *SmeshingStatus) GetSmesherId() *AccountId {
	if x != nil {
		return x.SmesherId
	}
	return nil
}

func (x *SmeshingStatus) GetCoinbaseAddress() *AccountId {
	if x != nil {
		return x.CoinbaseAddress
	}
	return nil
}

type SmeshingStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *SmeshingStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SmeshingStatusResponse) Reset() {
	*x = SmeshingStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_smesher_types_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmeshingStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmeshingStatusResponse) ProtoMessage() {}

func (x *SmeshingStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_smesher_types_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmeshingStatusResponse.ProtoReflect.Descriptor instead.
func (*SmeshingStatusResponse) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_smesher_types_proto_rawDescGZIP(), []int{2}
}

func (x *SmeshingStatusResponse) GetStatus() *SmeshingStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type StartSmeshingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SmeshingData *SmeshingData `protobuf:"bytes,1,opt,name=smeshing_data,json=smeshingData,proto3" json:"smeshing_data,omitempty"`
}

func (x *StartSmeshingRequest) Reset() {
	*x = StartSmeshingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_smesher_types_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartSmeshingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartSmeshingRequest) ProtoMessage() {}

func (x *StartSmeshingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_smesher_types_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartSmeshingRequest.ProtoReflect.Descriptor instead.
func (*StartSmeshingRequest) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_smesher_types_proto_rawDescGZIP(), []int{3}
}

func (x *StartSmeshingRequest) GetSmeshingData() *SmeshingData {
	if x != nil {
		return x.SmeshingData
	}
	return nil
}

type StartSmeshingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *status.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *StartSmeshingResponse) Reset() {
	*x = StartSmeshingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_smesher_types_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartSmeshingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartSmeshingResponse) ProtoMessage() {}

func (x *StartSmeshingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_smesher_types_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartSmeshingResponse.ProtoReflect.Descriptor instead.
func (*StartSmeshingResponse) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_smesher_types_proto_rawDescGZIP(), []int{4}
}

func (x *StartSmeshingResponse) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type StopSmeshingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// request node to stop participating in protocol. If false, node will not submit new activations to the network
	// but will continue to participate in protocol and may get additional rewards
	StopProtocolParticipation bool `protobuf:"varint,1,opt,name=stop_protocol_participation,json=stopProtocolParticipation,proto3" json:"stop_protocol_participation,omitempty"`
}

func (x *StopSmeshingRequest) Reset() {
	*x = StopSmeshingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_smesher_types_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopSmeshingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopSmeshingRequest) ProtoMessage() {}

func (x *StopSmeshingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_smesher_types_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopSmeshingRequest.ProtoReflect.Descriptor instead.
func (*StopSmeshingRequest) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_smesher_types_proto_rawDescGZIP(), []int{5}
}

func (x *StopSmeshingRequest) GetStopProtocolParticipation() bool {
	if x != nil {
		return x.StopProtocolParticipation
	}
	return false
}

type StopSmeshingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *status.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *StopSmeshingResponse) Reset() {
	*x = StopSmeshingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_smesher_types_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopSmeshingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopSmeshingResponse) ProtoMessage() {}

func (x *StopSmeshingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_smesher_types_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopSmeshingResponse.ProtoReflect.Descriptor instead.
func (*StopSmeshingResponse) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_smesher_types_proto_rawDescGZIP(), []int{6}
}

func (x *StopSmeshingResponse) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type SetCoinbaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *AccountId `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SetCoinbaseRequest) Reset() {
	*x = SetCoinbaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_smesher_types_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCoinbaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCoinbaseRequest) ProtoMessage() {}

func (x *SetCoinbaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_smesher_types_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCoinbaseRequest.ProtoReflect.Descriptor instead.
func (*SetCoinbaseRequest) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_smesher_types_proto_rawDescGZIP(), []int{7}
}

func (x *SetCoinbaseRequest) GetId() *AccountId {
	if x != nil {
		return x.Id
	}
	return nil
}

type SetCoinbaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *status.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SetCoinbaseResponse) Reset() {
	*x = SetCoinbaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_smesher_types_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCoinbaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCoinbaseResponse) ProtoMessage() {}

func (x *SetCoinbaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_smesher_types_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCoinbaseResponse.ProtoReflect.Descriptor instead.
func (*SetCoinbaseResponse) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_smesher_types_proto_rawDescGZIP(), []int{8}
}

func (x *SetCoinbaseResponse) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type SmesherIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId *AccountId `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
}

func (x *SmesherIDResponse) Reset() {
	*x = SmesherIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_smesher_types_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmesherIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmesherIDResponse) ProtoMessage() {}

func (x *SmesherIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_smesher_types_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmesherIDResponse.ProtoReflect.Descriptor instead.
func (*SmesherIDResponse) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_smesher_types_proto_rawDescGZIP(), []int{9}
}

func (x *SmesherIDResponse) GetAccountId() *AccountId {
	if x != nil {
		return x.AccountId
	}
	return nil
}

type CoinbaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId *AccountId `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
}

func (x *CoinbaseResponse) Reset() {
	*x = CoinbaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_smesher_types_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinbaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinbaseResponse) ProtoMessage() {}

func (x *CoinbaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_smesher_types_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinbaseResponse.ProtoReflect.Descriptor instead.
func (*CoinbaseResponse) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_smesher_types_proto_rawDescGZIP(), []int{10}
}

func (x *CoinbaseResponse) GetAccountId() *AccountId {
	if x != nil {
		return x.AccountId
	}
	return nil
}

type PostComputeProvider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint32          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                                     // 0, 1, 2...
	Model       string          `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`                                                                // e.g. Nvidia GTX 2700
	ComputeApi  ComputeApiClass `protobuf:"varint,3,opt,name=compute_api,json=computeApi,proto3,enum=spacemesh.v1.ComputeApiClass" json:"compute_api,omitempty"` // A provided compute api
	Performance uint64          `protobuf:"varint,4,opt,name=performance,proto3" json:"performance,omitempty"`                                                   // Estimated performance in hashes per second
}

func (x *PostComputeProvider) Reset() {
	*x = PostComputeProvider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_smesher_types_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostComputeProvider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostComputeProvider) ProtoMessage() {}

func (x *PostComputeProvider) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_smesher_types_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostComputeProvider.ProtoReflect.Descriptor instead.
func (*PostComputeProvider) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_smesher_types_proto_rawDescGZIP(), []int{11}
}

func (x *PostComputeProvider) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PostComputeProvider) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *PostComputeProvider) GetComputeApi() ComputeApiClass {
	if x != nil {
		return x.ComputeApi
	}
	return ComputeApiClass_COMPUTE_API_CLASS_UNSPECIFIED
}

func (x *PostComputeProvider) GetPerformance() uint64 {
	if x != nil {
		return x.Performance
	}
	return 0
}

type PostComputeProvidersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostComputeProvider []*PostComputeProvider `protobuf:"bytes,1,rep,name=post_compute_provider,json=postComputeProvider,proto3" json:"post_compute_provider,omitempty"`
}

func (x *PostComputeProvidersResponse) Reset() {
	*x = PostComputeProvidersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_smesher_types_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostComputeProvidersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostComputeProvidersResponse) ProtoMessage() {}

func (x *PostComputeProvidersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_smesher_types_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostComputeProvidersResponse.ProtoReflect.Descriptor instead.
func (*PostComputeProvidersResponse) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_smesher_types_proto_rawDescGZIP(), []int{12}
}

func (x *PostComputeProvidersResponse) GetPostComputeProvider() []*PostComputeProvider {
	if x != nil {
		return x.PostComputeProvider
	}
	return nil
}

type EstimatedRewardsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EstimatedRewardsRequest) Reset() {
	*x = EstimatedRewardsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_smesher_types_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstimatedRewardsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimatedRewardsRequest) ProtoMessage() {}

func (x *EstimatedRewardsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_smesher_types_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimatedRewardsRequest.ProtoReflect.Descriptor instead.
func (*EstimatedRewardsRequest) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_smesher_types_proto_rawDescGZIP(), []int{13}
}

// Estimated rewards for the next epoch. Note that this is a global value that will be the
// same for all smeshers, and is based on the default minimum commitment size and fixed
// epoch length, both of which are network params.
type EstimatedRewardsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The amount of the total estimated reward in the next upcoming epoch
	Amount *Amount `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	// The commitment size that this estimated reward corresponds to (part of global config)
	DataSize uint64 `protobuf:"varint,2,opt,name=data_size,json=dataSize,proto3" json:"data_size,omitempty"`
}

func (x *EstimatedRewardsResponse) Reset() {
	*x = EstimatedRewardsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_smesher_types_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstimatedRewardsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimatedRewardsResponse) ProtoMessage() {}

func (x *EstimatedRewardsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_smesher_types_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimatedRewardsResponse.ProtoReflect.Descriptor instead.
func (*EstimatedRewardsResponse) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_smesher_types_proto_rawDescGZIP(), []int{14}
}

func (x *EstimatedRewardsResponse) GetAmount() *Amount {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *EstimatedRewardsResponse) GetDataSize() uint64 {
	if x != nil {
		return x.DataSize
	}
	return 0
}

type MinGasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mingas *SimpleInt `protobuf:"bytes,1,opt,name=mingas,proto3" json:"mingas,omitempty"`
}

func (x *MinGasResponse) Reset() {
	*x = MinGasResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_smesher_types_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinGasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinGasResponse) ProtoMessage() {}

func (x *MinGasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_smesher_types_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinGasResponse.ProtoReflect.Descriptor instead.
func (*MinGasResponse) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_smesher_types_proto_rawDescGZIP(), []int{15}
}

func (x *MinGasResponse) GetMingas() *SimpleInt {
	if x != nil {
		return x.Mingas
	}
	return nil
}

type SetMinGasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mingas *SimpleInt `protobuf:"bytes,1,opt,name=mingas,proto3" json:"mingas,omitempty"`
}

func (x *SetMinGasRequest) Reset() {
	*x = SetMinGasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_smesher_types_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMinGasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMinGasRequest) ProtoMessage() {}

func (x *SetMinGasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_smesher_types_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMinGasRequest.ProtoReflect.Descriptor instead.
func (*SetMinGasRequest) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_smesher_types_proto_rawDescGZIP(), []int{16}
}

func (x *SetMinGasRequest) GetMingas() *SimpleInt {
	if x != nil {
		return x.Mingas
	}
	return nil
}

type SetMinGasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *status.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SetMinGasResponse) Reset() {
	*x = SetMinGasResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_smesher_types_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMinGasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMinGasResponse) ProtoMessage() {}

func (x *SetMinGasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_smesher_types_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMinGasResponse.ProtoReflect.Descriptor instead.
func (*SetMinGasResponse) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_smesher_types_proto_rawDescGZIP(), []int{17}
}

func (x *SetMinGasResponse) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type SmeshingStatusStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *SmeshingStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SmeshingStatusStreamResponse) Reset() {
	*x = SmeshingStatusStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spacemesh_v1_smesher_types_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmeshingStatusStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmeshingStatusStreamResponse) ProtoMessage() {}

func (x *SmeshingStatusStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spacemesh_v1_smesher_types_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmeshingStatusStreamResponse.ProtoReflect.Descriptor instead.
func (*SmeshingStatusStreamResponse) Descriptor() ([]byte, []int) {
	return file_spacemesh_v1_smesher_types_proto_rawDescGZIP(), []int{18}
}

func (x *SmeshingStatusStreamResponse) GetStatus() *SmeshingStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

var File_spacemesh_v1_smesher_types_proto protoreflect.FileDescriptor

var file_spacemesh_v1_smesher_types_proto_rawDesc = []byte{
	0x0a, 0x20, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x6d, 0x65, 0x73, 0x68, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0c, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31,
	0x1a, 0x18, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x76, 0x31, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xb1, 0x01, 0x0a, 0x0c, 0x53, 0x6d, 0x65, 0x73, 0x68, 0x69, 0x6e, 0x67,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x64, 0x61, 0x74,
	0x61, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x68, 0x72, 0x6f, 0x74, 0x74, 0x6c,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x74, 0x68, 0x72, 0x6f, 0x74, 0x74, 0x6c,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x33, 0x0a, 0x08, 0x63, 0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x08, 0x63,
	0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73, 0x65, 0x22, 0x95, 0x05, 0x0a, 0x0e, 0x53, 0x6d, 0x65, 0x73,
	0x68, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73,
	0x5f, 0x73, 0x6d, 0x65, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x69, 0x73, 0x53, 0x6d, 0x65, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x12, 0x4b, 0x0a, 0x0c, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x28, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x6d, 0x65, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0b, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x65, 0x74, 0x75,
	0x70, 0x5f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0f, 0x73, 0x65, 0x74, 0x75, 0x70, 0x49, 0x6e, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x79, 0x74, 0x65, 0x73, 0x5f, 0x77, 0x72,
	0x69, 0x74, 0x74, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x62, 0x79, 0x74,
	0x65, 0x73, 0x57, 0x72, 0x69, 0x74, 0x74, 0x65, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x45,
	0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x26, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x6d, 0x65, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x36, 0x0a, 0x0a, 0x73, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x52, 0x09, 0x73, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x72, 0x49, 0x64, 0x12, 0x42, 0x0a,
	0x10, 0x63, 0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d,
	0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x52, 0x0f, 0x63, 0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x22, 0x7c, 0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1c, 0x0a, 0x18, 0x46, 0x49, 0x4c, 0x45, 0x53, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1a,
	0x0a, 0x16, 0x46, 0x49, 0x4c, 0x45, 0x53, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e,
	0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x46, 0x49,
	0x4c, 0x45, 0x53, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49,
	0x41, 0x4c, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x46, 0x49, 0x4c, 0x45, 0x53, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x03, 0x22,
	0x5e, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x5f, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x57, 0x52, 0x49, 0x54, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x22,
	0x4e, 0x0a, 0x16, 0x53, 0x6d, 0x65, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6d, 0x65, 0x73, 0x68, 0x69, 0x6e,
	0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x57, 0x0a, 0x14, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x6d, 0x65, 0x73, 0x68, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x0d, 0x73, 0x6d, 0x65, 0x73, 0x68,
	0x69, 0x6e, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6d,
	0x65, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0c, 0x73, 0x6d, 0x65, 0x73,
	0x68, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x22, 0x43, 0x0a, 0x15, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x53, 0x6d, 0x65, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x55, 0x0a,
	0x13, 0x53, 0x74, 0x6f, 0x70, 0x53, 0x6d, 0x65, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x1b, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x19, 0x73, 0x74, 0x6f, 0x70, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x42, 0x0a, 0x14, 0x53, 0x74, 0x6f, 0x70, 0x53, 0x6d, 0x65, 0x73,
	0x68, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x3d, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x43,
	0x6f, 0x69, 0x6e, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64, 0x22, 0x41, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x43, 0x6f,
	0x69, 0x6e, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x4b, 0x0a, 0x11, 0x53, 0x6d,
	0x65, 0x73, 0x68, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x36, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x09, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x4a, 0x0a, 0x10, 0x43, 0x6f, 0x69, 0x6e, 0x62,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0a, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x22, 0x9d, 0x01, 0x0a, 0x13, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70,
	0x75, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x12, 0x3e, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x5f, 0x61, 0x70, 0x69,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65,
	0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x41, 0x70, 0x69,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x41, 0x70,
	0x69, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x6e, 0x63, 0x65, 0x22, 0x75, 0x0a, 0x1c, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x75,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x15, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70,
	0x75, 0x74, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x13, 0x70, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x75,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0x19, 0x0a, 0x17, 0x45, 0x73,
	0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x65, 0x0a, 0x18, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74,
	0x65, 0x64, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2c, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x41, 0x0a, 0x0e,
	0x4d, 0x69, 0x6e, 0x47, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f,
	0x0a, 0x06, 0x6d, 0x69, 0x6e, 0x67, 0x61, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69,
	0x6d, 0x70, 0x6c, 0x65, 0x49, 0x6e, 0x74, 0x52, 0x06, 0x6d, 0x69, 0x6e, 0x67, 0x61, 0x73, 0x22,
	0x43, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x47, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x06, 0x6d, 0x69, 0x6e, 0x67, 0x61, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x6e, 0x74, 0x52, 0x06, 0x6d, 0x69,
	0x6e, 0x67, 0x61, 0x73, 0x22, 0x3f, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x47, 0x61,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x54, 0x0a, 0x1c, 0x53, 0x6d, 0x65, 0x73, 0x68, 0x69, 0x6e,
	0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73,
	0x68, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6d, 0x65, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2a, 0x89, 0x01, 0x0a, 0x0f,
	0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x41, 0x70, 0x69, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12,
	0x21, 0x0a, 0x1d, 0x43, 0x4f, 0x4d, 0x50, 0x55, 0x54, 0x45, 0x5f, 0x41, 0x50, 0x49, 0x5f, 0x43,
	0x4c, 0x41, 0x53, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x43, 0x4f, 0x4d, 0x50, 0x55, 0x54, 0x45, 0x5f, 0x41, 0x50,
	0x49, 0x5f, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x43, 0x50, 0x55, 0x10, 0x01, 0x12, 0x1a, 0x0a,
	0x16, 0x43, 0x4f, 0x4d, 0x50, 0x55, 0x54, 0x45, 0x5f, 0x41, 0x50, 0x49, 0x5f, 0x43, 0x4c, 0x41,
	0x53, 0x53, 0x5f, 0x43, 0x55, 0x44, 0x41, 0x10, 0x02, 0x12, 0x1c, 0x0a, 0x18, 0x43, 0x4f, 0x4d,
	0x50, 0x55, 0x54, 0x45, 0x5f, 0x41, 0x50, 0x49, 0x5f, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x56,
	0x55, 0x4c, 0x4b, 0x41, 0x4e, 0x10, 0x03, 0x42, 0x34, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x6f,
	0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x2f, 0x67, 0x6f,
	0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_spacemesh_v1_smesher_types_proto_rawDescOnce sync.Once
	file_spacemesh_v1_smesher_types_proto_rawDescData = file_spacemesh_v1_smesher_types_proto_rawDesc
)

func file_spacemesh_v1_smesher_types_proto_rawDescGZIP() []byte {
	file_spacemesh_v1_smesher_types_proto_rawDescOnce.Do(func() {
		file_spacemesh_v1_smesher_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_spacemesh_v1_smesher_types_proto_rawDescData)
	})
	return file_spacemesh_v1_smesher_types_proto_rawDescData
}

var file_spacemesh_v1_smesher_types_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_spacemesh_v1_smesher_types_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_spacemesh_v1_smesher_types_proto_goTypes = []interface{}{
	(ComputeApiClass)(0),                 // 0: spacemesh.v1.ComputeApiClass
	(SmeshingStatus_FilesStatus)(0),      // 1: spacemesh.v1.SmeshingStatus.FilesStatus
	(SmeshingStatus_ErrorType)(0),        // 2: spacemesh.v1.SmeshingStatus.ErrorType
	(*SmeshingData)(nil),                 // 3: spacemesh.v1.SmeshingData
	(*SmeshingStatus)(nil),               // 4: spacemesh.v1.SmeshingStatus
	(*SmeshingStatusResponse)(nil),       // 5: spacemesh.v1.SmeshingStatusResponse
	(*StartSmeshingRequest)(nil),         // 6: spacemesh.v1.StartSmeshingRequest
	(*StartSmeshingResponse)(nil),        // 7: spacemesh.v1.StartSmeshingResponse
	(*StopSmeshingRequest)(nil),          // 8: spacemesh.v1.StopSmeshingRequest
	(*StopSmeshingResponse)(nil),         // 9: spacemesh.v1.StopSmeshingResponse
	(*SetCoinbaseRequest)(nil),           // 10: spacemesh.v1.SetCoinbaseRequest
	(*SetCoinbaseResponse)(nil),          // 11: spacemesh.v1.SetCoinbaseResponse
	(*SmesherIDResponse)(nil),            // 12: spacemesh.v1.SmesherIDResponse
	(*CoinbaseResponse)(nil),             // 13: spacemesh.v1.CoinbaseResponse
	(*PostComputeProvider)(nil),          // 14: spacemesh.v1.PostComputeProvider
	(*PostComputeProvidersResponse)(nil), // 15: spacemesh.v1.PostComputeProvidersResponse
	(*EstimatedRewardsRequest)(nil),      // 16: spacemesh.v1.EstimatedRewardsRequest
	(*EstimatedRewardsResponse)(nil),     // 17: spacemesh.v1.EstimatedRewardsResponse
	(*MinGasResponse)(nil),               // 18: spacemesh.v1.MinGasResponse
	(*SetMinGasRequest)(nil),             // 19: spacemesh.v1.SetMinGasRequest
	(*SetMinGasResponse)(nil),            // 20: spacemesh.v1.SetMinGasResponse
	(*SmeshingStatusStreamResponse)(nil), // 21: spacemesh.v1.SmeshingStatusStreamResponse
	(*AccountId)(nil),                    // 22: spacemesh.v1.AccountId
	(*status.Status)(nil),                // 23: google.rpc.Status
	(*Amount)(nil),                       // 24: spacemesh.v1.Amount
	(*SimpleInt)(nil),                    // 25: spacemesh.v1.SimpleInt
}
var file_spacemesh_v1_smesher_types_proto_depIdxs = []int32{
	22, // 0: spacemesh.v1.SmeshingData.coinbase:type_name -> spacemesh.v1.AccountId
	1,  // 1: spacemesh.v1.SmeshingStatus.files_status:type_name -> spacemesh.v1.SmeshingStatus.FilesStatus
	2,  // 2: spacemesh.v1.SmeshingStatus.error_type:type_name -> spacemesh.v1.SmeshingStatus.ErrorType
	22, // 3: spacemesh.v1.SmeshingStatus.smesher_id:type_name -> spacemesh.v1.AccountId
	22, // 4: spacemesh.v1.SmeshingStatus.coinbase_address:type_name -> spacemesh.v1.AccountId
	4,  // 5: spacemesh.v1.SmeshingStatusResponse.status:type_name -> spacemesh.v1.SmeshingStatus
	3,  // 6: spacemesh.v1.StartSmeshingRequest.smeshing_data:type_name -> spacemesh.v1.SmeshingData
	23, // 7: spacemesh.v1.StartSmeshingResponse.status:type_name -> google.rpc.Status
	23, // 8: spacemesh.v1.StopSmeshingResponse.status:type_name -> google.rpc.Status
	22, // 9: spacemesh.v1.SetCoinbaseRequest.id:type_name -> spacemesh.v1.AccountId
	23, // 10: spacemesh.v1.SetCoinbaseResponse.status:type_name -> google.rpc.Status
	22, // 11: spacemesh.v1.SmesherIDResponse.account_id:type_name -> spacemesh.v1.AccountId
	22, // 12: spacemesh.v1.CoinbaseResponse.account_id:type_name -> spacemesh.v1.AccountId
	0,  // 13: spacemesh.v1.PostComputeProvider.compute_api:type_name -> spacemesh.v1.ComputeApiClass
	14, // 14: spacemesh.v1.PostComputeProvidersResponse.post_compute_provider:type_name -> spacemesh.v1.PostComputeProvider
	24, // 15: spacemesh.v1.EstimatedRewardsResponse.amount:type_name -> spacemesh.v1.Amount
	25, // 16: spacemesh.v1.MinGasResponse.mingas:type_name -> spacemesh.v1.SimpleInt
	25, // 17: spacemesh.v1.SetMinGasRequest.mingas:type_name -> spacemesh.v1.SimpleInt
	23, // 18: spacemesh.v1.SetMinGasResponse.status:type_name -> google.rpc.Status
	4,  // 19: spacemesh.v1.SmeshingStatusStreamResponse.status:type_name -> spacemesh.v1.SmeshingStatus
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_spacemesh_v1_smesher_types_proto_init() }
func file_spacemesh_v1_smesher_types_proto_init() {
	if File_spacemesh_v1_smesher_types_proto != nil {
		return
	}
	file_spacemesh_v1_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_spacemesh_v1_smesher_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmeshingData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_smesher_types_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmeshingStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_smesher_types_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmeshingStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_smesher_types_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartSmeshingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_smesher_types_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartSmeshingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_smesher_types_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopSmeshingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_smesher_types_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopSmeshingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_smesher_types_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCoinbaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_smesher_types_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCoinbaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_smesher_types_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmesherIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_smesher_types_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinbaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_smesher_types_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostComputeProvider); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_smesher_types_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostComputeProvidersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_smesher_types_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EstimatedRewardsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_smesher_types_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EstimatedRewardsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_smesher_types_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinGasResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_smesher_types_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMinGasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_smesher_types_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMinGasResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spacemesh_v1_smesher_types_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmeshingStatusStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_spacemesh_v1_smesher_types_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_spacemesh_v1_smesher_types_proto_goTypes,
		DependencyIndexes: file_spacemesh_v1_smesher_types_proto_depIdxs,
		EnumInfos:         file_spacemesh_v1_smesher_types_proto_enumTypes,
		MessageInfos:      file_spacemesh_v1_smesher_types_proto_msgTypes,
	}.Build()
	File_spacemesh_v1_smesher_types_proto = out.File
	file_spacemesh_v1_smesher_types_proto_rawDesc = nil
	file_spacemesh_v1_smesher_types_proto_goTypes = nil
	file_spacemesh_v1_smesher_types_proto_depIdxs = nil
}
